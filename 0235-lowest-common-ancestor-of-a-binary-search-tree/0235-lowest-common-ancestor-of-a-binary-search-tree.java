class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        int small = Math.min(p.val, q.val); // Lower Boundary...
        int large = Math.max(p.val, q.val); // Upper Boundary...
        while (root != null) {
            if (root.val > large) // p, q belong to the left subtree...
                root = root.left;
            else if (root.val < small) // p, q belong to the right subtree...
                root = root.right;
            else // This root is the LCA between p and q...
                return root;
        }
        return null; // If there is no LCA...
    }
}